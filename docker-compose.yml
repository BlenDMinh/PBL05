version: '3.8'

networks:
    app-network:
        driver: bridge

services:
    db:
        container_name: postgres-db
        image: postgres:16-alpine
        restart: always
        env_file:
            - .env
        environment:
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_DB=${POSTGRES_DB}
        ports:
            - '${DB_PORT}:5432'
        volumes: 
            - './storage/postgres-data:/var/lib/postgresql/data'
        networks:
            - app-network

    api:
        build: backend/.
        container_name: backend-api
        restart: always
        ports:
            - '${SERVER_PORT}:8080'
            - '${DT_SOCKET_PORT}:8000'
        env_file:
            - .env
        depends_on:
            - db
        networks:
            - app-network

    # minio:
    #     image: minio/minio:latest
    #     container_name: minio
    #     env_file:
    #         - .env
    #     ports:
    #         - "9000:9000"
    #         - "9001:9001"
    #     volumes:
    #         - ./storage/minio-data:/data
    #     environment:
    #         MINIO_ROOT_USER: ${MINIO_ROOT_USER}
    #         MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    #     command: server --console-address ":9001" /data
    #     networks:
    #         - app-network

    # createbuckets:
    #     image: minio/mc:latest
    #     depends_on:
    #         - minio
    #     env_file:
    #         - .env
    #     entrypoint: >
    #             /bin/sh -c "
    #             /usr/bin/mc alias set myminio http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD};
    #             /usr/bin/mc mb myminio/chess;
    #             /usr/bin/mc anonymous set public myminio/chess;
    #             exit 0;
    #             "
    #     networks:
    #         - app-network